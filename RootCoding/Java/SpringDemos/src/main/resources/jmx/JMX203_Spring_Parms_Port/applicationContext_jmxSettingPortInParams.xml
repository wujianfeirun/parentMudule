<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <!-- indicate to first look for a server default "service:jmx:jmxmp://localhost:9875" -->
        <property name="locateExistingServerIfPossible" value="true"/>
        <!--
                <property name="agentId" value="MBeanServer_instance_agentId>"/>
        -->
    </bean>

    <!-- this bean must not be lazily initialized if the exporting is to happen -->
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="beans">
            <map>
                <entry key="bean:name=testBean1" value-ref="testBean"/>
            </map>
        </property>
        <property name="server" ref="mbeanServer"/>
    </bean>

    <bean id="testBean" class="com.main.jmx.JMX203_Spring_Params_Port.JmxTestBean">
        <property name="name" value="TEST"/>
        <property name="age" value="100"/>
    </bean>
    <bean id="jmxBeanContainer" class="com.main.jmx.JMX203_Spring_Params_Port.JmxBeanContainer">
        <property name="testBean" ref="testBean"/>      <!--???????? auto inject when the container run -->
    </bean>

    <!-- use this to connect MBeanServer,can remote invoke Mbean -->
    <bean id="serverConnector"
          class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="serverRegistry">
        <property name="objectName" value="connector:name=rmi"/>
        <property name="serviceUrl"
                  value="service:jmx:rmi://localhost/jndi/rmi://localhost:1099/myconnector"/>
    </bean>
    <bean id="serverRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
        <property name="port" value="1099"/>
    </bean>
</beans>